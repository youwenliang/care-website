{"ast":null,"code":"/*! npm.im/image-promise 5.0.1 */\n'use strict';\n\nfunction load(image) {\n  if (!image) {\n    return Promise.reject();\n  } else if (typeof image === 'string') {\n    /* Create a <img> from a string */\n    var src = image;\n    image = new Image();\n    image.src = src;\n  } else if (image.length !== undefined) {\n    /* Treat as multiple images */\n    // Momentarily ignore errors\n    var reflected = [].map.call(image, function (img) {\n      return load(img).catch(function (err) {\n        return err;\n      });\n    });\n    return Promise.all(reflected).then(function (results) {\n      var loaded = results.filter(function (x) {\n        return x.naturalWidth;\n      });\n\n      if (loaded.length === results.length) {\n        return loaded;\n      }\n\n      return Promise.reject({\n        loaded: loaded,\n        errored: results.filter(function (x) {\n          return !x.naturalWidth;\n        })\n      });\n    });\n  } else if (image.tagName !== 'IMG') {\n    return Promise.reject();\n  }\n\n  var promise = new Promise(function (resolve, reject) {\n    if (image.naturalWidth) {\n      // If the browser can determine the naturalWidth the\n      // image is already loaded successfully\n      resolve(image);\n    } else if (image.complete) {\n      // If the image is complete but the naturalWidth is 0px\n      // it is probably broken\n      reject(image);\n    } else {\n      image.addEventListener('load', fullfill);\n      image.addEventListener('error', fullfill);\n    }\n\n    function fullfill() {\n      if (image.naturalWidth) {\n        resolve(image);\n      } else {\n        reject(image);\n      }\n\n      image.removeEventListener('load', fullfill);\n      image.removeEventListener('error', fullfill);\n    }\n  });\n  promise.image = image;\n  return promise;\n}\n\nmodule.exports = load;","map":{"version":3,"sources":["/Users/mliang/Websites/care-website/node_modules/image-promise/dist/image-promise.common-js.js"],"names":["load","image","Promise","reject","src","Image","length","undefined","reflected","map","call","img","catch","err","all","then","results","loaded","filter","x","naturalWidth","errored","tagName","promise","resolve","complete","addEventListener","fullfill","removeEventListener","module","exports"],"mappings":"AAAA;AACA;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACpB,MAAI,CAACA,KAAL,EAAY;AACX,WAAOC,OAAO,CAACC,MAAR,EAAP;AACA,GAFD,MAEO,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AACrC;AACA,QAAIG,GAAG,GAAGH,KAAV;AACAA,IAAAA,KAAK,GAAG,IAAII,KAAJ,EAAR;AACAJ,IAAAA,KAAK,CAACG,GAAN,GAAYA,GAAZ;AACA,GALM,MAKA,IAAIH,KAAK,CAACK,MAAN,KAAiBC,SAArB,EAAgC;AACtC;AAEA;AACA,QAAIC,SAAS,GAAG,GAAGC,GAAH,CAAOC,IAAP,CAAYT,KAAZ,EAAmB,UAAUU,GAAV,EAAe;AAAE,aAAOX,IAAI,CAACW,GAAD,CAAJ,CAAUC,KAAV,CAAgB,UAAUC,GAAV,EAAe;AAAE,eAAOA,GAAP;AAAa,OAA9C,CAAP;AAAyD,KAA7F,CAAhB;AAEA,WAAOX,OAAO,CAACY,GAAR,CAAYN,SAAZ,EAAuBO,IAAvB,CAA4B,UAAUC,OAAV,EAAmB;AACrD,UAAIC,MAAM,GAAGD,OAAO,CAACE,MAAR,CAAe,UAAUC,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACC,YAAT;AAAwB,OAAtD,CAAb;;AACA,UAAIH,MAAM,CAACX,MAAP,KAAkBU,OAAO,CAACV,MAA9B,EAAsC;AACrC,eAAOW,MAAP;AACA;;AACD,aAAOf,OAAO,CAACC,MAAR,CAAe;AACrBc,QAAAA,MAAM,EAAEA,MADa;AAErBI,QAAAA,OAAO,EAAEL,OAAO,CAACE,MAAR,CAAe,UAAUC,CAAV,EAAa;AAAE,iBAAO,CAACA,CAAC,CAACC,YAAV;AAAyB,SAAvD;AAFY,OAAf,CAAP;AAIA,KATM,CAAP;AAUA,GAhBM,MAgBA,IAAInB,KAAK,CAACqB,OAAN,KAAkB,KAAtB,EAA6B;AACnC,WAAOpB,OAAO,CAACC,MAAR,EAAP;AACA;;AAED,MAAIoB,OAAO,GAAG,IAAIrB,OAAJ,CAAY,UAAUsB,OAAV,EAAmBrB,MAAnB,EAA2B;AACpD,QAAIF,KAAK,CAACmB,YAAV,EAAwB;AACvB;AACA;AACAI,MAAAA,OAAO,CAACvB,KAAD,CAAP;AACA,KAJD,MAIO,IAAIA,KAAK,CAACwB,QAAV,EAAoB;AAC1B;AACA;AACAtB,MAAAA,MAAM,CAACF,KAAD,CAAN;AACA,KAJM,MAIA;AACNA,MAAAA,KAAK,CAACyB,gBAAN,CAAuB,MAAvB,EAA+BC,QAA/B;AACA1B,MAAAA,KAAK,CAACyB,gBAAN,CAAuB,OAAvB,EAAgCC,QAAhC;AACA;;AACD,aAASA,QAAT,GAAoB;AACnB,UAAI1B,KAAK,CAACmB,YAAV,EAAwB;AACvBI,QAAAA,OAAO,CAACvB,KAAD,CAAP;AACA,OAFD,MAEO;AACNE,QAAAA,MAAM,CAACF,KAAD,CAAN;AACA;;AACDA,MAAAA,KAAK,CAAC2B,mBAAN,CAA0B,MAA1B,EAAkCD,QAAlC;AACA1B,MAAAA,KAAK,CAAC2B,mBAAN,CAA0B,OAA1B,EAAmCD,QAAnC;AACA;AACD,GAtBa,CAAd;AAuBAJ,EAAAA,OAAO,CAACtB,KAAR,GAAgBA,KAAhB;AACA,SAAOsB,OAAP;AACA;;AAEDM,MAAM,CAACC,OAAP,GAAiB9B,IAAjB","sourcesContent":["/*! npm.im/image-promise 5.0.1 */\n'use strict';\n\nfunction load(image) {\n\tif (!image) {\n\t\treturn Promise.reject();\n\t} else if (typeof image === 'string') {\n\t\t/* Create a <img> from a string */\n\t\tvar src = image;\n\t\timage = new Image();\n\t\timage.src = src;\n\t} else if (image.length !== undefined) {\n\t\t/* Treat as multiple images */\n\n\t\t// Momentarily ignore errors\n\t\tvar reflected = [].map.call(image, function (img) { return load(img).catch(function (err) { return err; }); });\n\n\t\treturn Promise.all(reflected).then(function (results) {\n\t\t\tvar loaded = results.filter(function (x) { return x.naturalWidth; });\n\t\t\tif (loaded.length === results.length) {\n\t\t\t\treturn loaded;\n\t\t\t}\n\t\t\treturn Promise.reject({\n\t\t\t\tloaded: loaded,\n\t\t\t\terrored: results.filter(function (x) { return !x.naturalWidth; })\n\t\t\t});\n\t\t});\n\t} else if (image.tagName !== 'IMG') {\n\t\treturn Promise.reject();\n\t}\n\n\tvar promise = new Promise(function (resolve, reject) {\n\t\tif (image.naturalWidth) {\n\t\t\t// If the browser can determine the naturalWidth the\n\t\t\t// image is already loaded successfully\n\t\t\tresolve(image);\n\t\t} else if (image.complete) {\n\t\t\t// If the image is complete but the naturalWidth is 0px\n\t\t\t// it is probably broken\n\t\t\treject(image);\n\t\t} else {\n\t\t\timage.addEventListener('load', fullfill);\n\t\t\timage.addEventListener('error', fullfill);\n\t\t}\n\t\tfunction fullfill() {\n\t\t\tif (image.naturalWidth) {\n\t\t\t\tresolve(image);\n\t\t\t} else {\n\t\t\t\treject(image);\n\t\t\t}\n\t\t\timage.removeEventListener('load', fullfill);\n\t\t\timage.removeEventListener('error', fullfill);\n\t\t}\n\t});\n\tpromise.image = image;\n\treturn promise;\n}\n\nmodule.exports = load;\n"]},"metadata":{},"sourceType":"script"}